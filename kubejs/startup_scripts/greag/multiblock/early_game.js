GTCEuStartupEvents.registry('gtceu:machine', event => {
    const $SteamMultiblock = Java.loadClass('com.gregtechceu.gtceu.common.machine.multiblock.steam.SteamParallelMultiblockMachine')
    const $CTPPPartAbility = Java.loadClass('com.mo_guang.gtceu.ctpp.api.ctpppartability')   
    
    event.create('larg_farm', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('larg_farm')
        .appearanceBlock(GTBlocks.TREATED_WOOD_PLANK)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('TTTTT', 'P...P', 'P...P', 'P...P', '.PPP.')
            .aisle('TDDDT', '.....', '.....', '.....', 'P...P')
            .aisle('TDWDT', '.....', '.....', '.....', 'P...P')
            .aisle('TDDDT', '.....', '.....', '.....', 'P...P')
            .aisle('TTCTT', 'P...P', 'P...P', 'P...P', '.PPP.')
            .where('C', Predicates.controller(Predicates.blocks(definition.get())))
            .where('T', Predicates.blocks('gtceu:treated_wood_planks')
            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1))
                //.or(Predicates.abilities(PartAbility.STEAM).setExactLimit(1))
                .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1)))
            .where('P', Predicates.blocks('gtceu:treated_wood_frame'))
            .where('D', Predicates.blocks('xycraft_machines:planter'))
            .where('W', Predicates.blocks('xycraft_machines:water_block'))
            .where('.', Predicates.any())
            .build())
        .workableCasingRenderer('gtceu:block/treated_wood_planks',
        'galaxy_greg:block/multiblock/create_sieve', false);

    event.create('primitive_ore_factory', 'multiblock')
        .tooltips(Component.translatable('galaxy_greg.primitive_ore_factory.1'))
        .tooltips(Component.translatable('galaxy_greg.steamuse.1'))
        .rotationState(RotationState.NON_Y_AXIS)
        //.machine((holder) => new $SteamMultiblock(holder))
        .recipeType('primitive_ore_processing')
        .appearanceBlock(GTBlocks.CASING_PRIMITIVE_BRICKS)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('#TTT#', '#FFF#', '#FFF#', '##F##', '#####', '#####', '#####')
            .aisle('TEEET', 'FG#GF', 'FG#GF', '#F#F#', '#FFF#', '##F##', '##B##')
            .aisle('TEEET', 'F###F', 'F###F', 'F###F', '#F#F#', '#F#F#', '#B#B#')
            .aisle('TEEET', 'FG#GF', 'FG#GF', '#F#F#', '#FFF#', '##F##', '##B##')
            .aisle('#TTT#', '#FCF#', '#FFF#', '##F##', '#####', '#####', '#####')
            .where('C', Predicates.controller(Predicates.blocks(definition.get())))
            .where('F', Predicates.blocks('gtceu:firebricks').setMinGlobalLimited(30)
                .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1)))
            .where('G', Predicates.blocks('gtceu:bronze_pipe_casing'))
            .where('T', Predicates.blocks('gtceu:bronze_firebox_casing'))
            .where('E', Predicates.blocks('gtceu:bronze_brick_casing'))
            .where('B', Predicates.blocks('gtceu:bronze_machine_casing'))
            .where('#', Predicates.any())
            .build())
        .workableCasingRenderer('gtceu:block/casings/solid/machine_primitive_bricks',
            'galaxy_greg:block/multiblock/create_sieve', false)


    event.create('better_primitive_blast_furnase', 'multiblock')
        .tooltips(Component.translatable('galaxy_greg.better_primitive_blast_furnase.1'))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('better_primitive_blast_furnase')
        .recipeModifier((recipe, machine) =>  GTRecipeModifiers.multiSmelterParallel(recipe, machine))
        //.recipeModifiers([(machine, recipe) => GTRecipeModifiers.getParallelAmount(machine, recipe, 4, false).getFirst()])
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('bbb', 'CCC', 'CCC', 'CCC', 'CCC')
            .aisle('bbb', 'C#C', 'C#C', 'C#C', 'C#C')
            .aisle('bbb', 'CFC', 'CCC', 'CCC', 'CCC')
            .where('F', Predicates.controller(Predicates.blocks(definition.get())))
            .where('C', Predicates.blocks('gtceu:solid_machine_casing')
                .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(2))
                .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1)))
            .where('b', Predicates.blocks('gtceu:steel_firebox_casing'))
        .where('#', Predicates.any())
        .build())
        .workableCasingRenderer('gtceu:block/casings/solid/machine_casing_solid_steel',
        'galaxy_greg:block/multiblock/blast_furnace', false)
})
